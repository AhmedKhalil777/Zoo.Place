// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zoo.Place.Data;

namespace Zoo.Place.Migrations
{
    [DbContext(typeof(ZooDbContext))]
    [Migration("20200402014841_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.2.20120.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zoo.Place.Domain.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<Guid?>("AnimalClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnimalClassId");

                    b.HasIndex("CageId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("Zoo.Place.Domain.AnimalClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("AgeRange")
                        .HasColumnType("real");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("ClassName")
                        .HasColumnType("ntext")
                        .HasMaxLength(50);

                    b.Property<int?>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.ToTable("AnimalClass");
                });

            modelBuilder.Entity("Zoo.Place.Domain.Cage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Area")
                        .HasColumnType("real");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.ToTable("Cage");
                });

            modelBuilder.Entity("Zoo.Place.Domain.Visitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("zooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("zooId");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("Zoo.Place.Domain.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("ZooName")
                        .HasColumnType("ntext")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Zoos");
                });

            modelBuilder.Entity("Zoo.Place.Domain.Animal", b =>
                {
                    b.HasOne("Zoo.Place.Domain.AnimalClass", "AnimalClass")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalClassId");

                    b.HasOne("Zoo.Place.Domain.Cage", "Cage")
                        .WithMany("Animals")
                        .HasForeignKey("CageId");
                });

            modelBuilder.Entity("Zoo.Place.Domain.AnimalClass", b =>
                {
                    b.HasOne("Zoo.Place.Domain.Zoo", null)
                        .WithMany("Classes")
                        .HasForeignKey("ZooId");
                });

            modelBuilder.Entity("Zoo.Place.Domain.Cage", b =>
                {
                    b.HasOne("Zoo.Place.Domain.Zoo", null)
                        .WithMany("Cages")
                        .HasForeignKey("ZooId");
                });

            modelBuilder.Entity("Zoo.Place.Domain.Visitor", b =>
                {
                    b.HasOne("Zoo.Place.Domain.Zoo", "zoo")
                        .WithMany("Visitors")
                        .HasForeignKey("zooId");
                });
#pragma warning restore 612, 618
        }
    }
}
